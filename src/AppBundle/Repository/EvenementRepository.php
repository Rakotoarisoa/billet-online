<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Evenement;
use AppBundle\Entity\User;
use AppBundle\Entity\LieuEvenement;
use Doctrine\ORM\EntityRepository;
/**
 * EvenementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EvenementRepository extends EntityRepository
{
    public function search($titre=null,$lieu=null,$date=null)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT e.titreEvenementSlug, e.titreEvenement, e.imageEvent, e.dateDebutEvent, e.dateFinEvent, lieu.nomSalle FROM AppBundle:Evenement e
            LEFT JOIN AppBundle:LieuEvenement lieu WITH e.lieuEvenement=lieu.id
           WHERE e.titreEvenement LIKE :titre AND lieu.nomSalle LIKE :lieu AND e.dateDebutEvent LIKE :date AND e.isPublished = 1')
            ->setParameter('titre', '%'.$titre.'%')
            ->setParameter('lieu', '%'.$lieu.'%')
            ->setParameter('date', '%'.$date.'%')
            ->getResult();
    }
    public function getAllEvents()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT e FROM AppBundle:Evenement e ORDER BY e.dateDebutEvent ASC')
            ->getResult();

    }
    public function getEventsByUser(User $user,$titre=null,$lieu=null,$date=null){
        return $this->getEntityManager()
            ->createQuery('SELECT e.titreEvenementSlug, e.titreEvenement, e.imageEvent, e.dateDebutEvent, e.dateFinEvent, lieu.nomSalle FROM AppBundle:Evenement e
            LEFT JOIN AppBundle:LieuEvenement lieu WITH e.lieuEvenement=lieu.id
           WHERE e.user=:user AND e.titreEvenement LIKE :titre AND lieu.nomSalle LIKE :lieu AND e.dateDebutEvent LIKE :date AND e.isPublished = 1')
            ->setParameter('titre', '%'.$titre.'%')
            ->setParameter('lieu', '%'.$lieu.'%')
            ->setParameter('date', '%'.$date.'%')
            ->setParameter('user', $user)
            ->getResult();
    }

    /** @fonction initier plan de salle
     * @param Evenement $event
     * $
     */
    public function initMapEvent(Evenement $event=null)
    {
        $em=$this->getEntityManager();

        if($event){
            $em->persist($event);
            $em->flush($event);
            return true;
        }
        return false;
    }
}
